/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TopologyResultResponseCustomParam'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TopologyResultResponseCustomParam'));
  } else {
    // Browser globals (root is window)
    if (!root.Swagger) {
      root.Swagger = {};
    }
    root.Swagger.TopologyResultResponseNodes = factory(root.Swagger.ApiClient, root.Swagger.TopologyResultResponseCustomParam);
  }
}(this, function(ApiClient, TopologyResultResponseCustomParam) {
  'use strict';




  /**
   * The TopologyResultResponseNodes model module.
   * @module model/TopologyResultResponseNodes
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>TopologyResultResponseNodes</code>.
   * @alias module:model/TopologyResultResponseNodes
   * @class
   */
  var exports = function() {
    var _this = this;


























  };

  /**
   * Constructs a <code>TopologyResultResponseNodes</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TopologyResultResponseNodes} obj Optional instance to populate.
   * @return {module:model/TopologyResultResponseNodes} The populated <code>TopologyResultResponseNodes</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('aclApplied')) {
        obj['aclApplied'] = ApiClient.convertToType(data['aclApplied'], 'Boolean');
      }
      if (data.hasOwnProperty('additionalInfo')) {
        obj['additionalInfo'] = ApiClient.convertToType(data['additionalInfo'], Object);
      }
      if (data.hasOwnProperty('customParam')) {
        obj['customParam'] = TopologyResultResponseCustomParam.constructFromObject(data['customParam']);
      }
      if (data.hasOwnProperty('dataPathId')) {
        obj['dataPathId'] = ApiClient.convertToType(data['dataPathId'], 'String');
      }
      if (data.hasOwnProperty('deviceType')) {
        obj['deviceType'] = ApiClient.convertToType(data['deviceType'], 'String');
      }
      if (data.hasOwnProperty('family')) {
        obj['family'] = ApiClient.convertToType(data['family'], 'String');
      }
      if (data.hasOwnProperty('fixed')) {
        obj['fixed'] = ApiClient.convertToType(data['fixed'], 'Boolean');
      }
      if (data.hasOwnProperty('greyOut')) {
        obj['greyOut'] = ApiClient.convertToType(data['greyOut'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('ip')) {
        obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
      }
      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('networkType')) {
        obj['networkType'] = ApiClient.convertToType(data['networkType'], 'String');
      }
      if (data.hasOwnProperty('nodeType')) {
        obj['nodeType'] = ApiClient.convertToType(data['nodeType'], 'String');
      }
      if (data.hasOwnProperty('order')) {
        obj['order'] = ApiClient.convertToType(data['order'], 'Number');
      }
      if (data.hasOwnProperty('osType')) {
        obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
      }
      if (data.hasOwnProperty('platformId')) {
        obj['platformId'] = ApiClient.convertToType(data['platformId'], 'String');
      }
      if (data.hasOwnProperty('role')) {
        obj['role'] = ApiClient.convertToType(data['role'], 'String');
      }
      if (data.hasOwnProperty('roleSource')) {
        obj['roleSource'] = ApiClient.convertToType(data['roleSource'], 'String');
      }
      if (data.hasOwnProperty('softwareVersion')) {
        obj['softwareVersion'] = ApiClient.convertToType(data['softwareVersion'], 'String');
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
      }
      if (data.hasOwnProperty('upperNode')) {
        obj['upperNode'] = ApiClient.convertToType(data['upperNode'], 'String');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
      }
      if (data.hasOwnProperty('vlanId')) {
        obj['vlanId'] = ApiClient.convertToType(data['vlanId'], 'String');
      }
      if (data.hasOwnProperty('x')) {
        obj['x'] = ApiClient.convertToType(data['x'], 'Number');
      }
      if (data.hasOwnProperty('y')) {
        obj['y'] = ApiClient.convertToType(data['y'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Boolean} aclApplied
   */
  exports.prototype['aclApplied'] = undefined;
  /**
   * @member {Object} additionalInfo
   */
  exports.prototype['additionalInfo'] = undefined;
  /**
   * @member {module:model/TopologyResultResponseCustomParam} customParam
   */
  exports.prototype['customParam'] = undefined;
  /**
   * @member {String} dataPathId
   */
  exports.prototype['dataPathId'] = undefined;
  /**
   * @member {String} deviceType
   */
  exports.prototype['deviceType'] = undefined;
  /**
   * @member {String} family
   */
  exports.prototype['family'] = undefined;
  /**
   * @member {Boolean} fixed
   */
  exports.prototype['fixed'] = undefined;
  /**
   * @member {Boolean} greyOut
   */
  exports.prototype['greyOut'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} ip
   */
  exports.prototype['ip'] = undefined;
  /**
   * @member {String} label
   */
  exports.prototype['label'] = undefined;
  /**
   * @member {String} networkType
   */
  exports.prototype['networkType'] = undefined;
  /**
   * @member {String} nodeType
   */
  exports.prototype['nodeType'] = undefined;
  /**
   * @member {Number} order
   */
  exports.prototype['order'] = undefined;
  /**
   * @member {String} osType
   */
  exports.prototype['osType'] = undefined;
  /**
   * @member {String} platformId
   */
  exports.prototype['platformId'] = undefined;
  /**
   * @member {String} role
   */
  exports.prototype['role'] = undefined;
  /**
   * @member {String} roleSource
   */
  exports.prototype['roleSource'] = undefined;
  /**
   * @member {String} softwareVersion
   */
  exports.prototype['softwareVersion'] = undefined;
  /**
   * @member {Array.<String>} tags
   */
  exports.prototype['tags'] = undefined;
  /**
   * @member {String} upperNode
   */
  exports.prototype['upperNode'] = undefined;
  /**
   * @member {String} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * @member {String} vlanId
   */
  exports.prototype['vlanId'] = undefined;
  /**
   * @member {Number} x
   */
  exports.prototype['x'] = undefined;
  /**
   * @member {Number} y
   */
  exports.prototype['y'] = undefined;



  return exports;
}));


