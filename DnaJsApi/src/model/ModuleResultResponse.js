/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Swagger) {
      root.Swagger = {};
    }
    root.Swagger.ModuleResultResponse = factory(root.Swagger.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ModuleResultResponse model module.
   * @module model/ModuleResultResponse
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ModuleResultResponse</code>.
   * @alias module:model/ModuleResultResponse
   * @class
   */
  var exports = function() {
    var _this = this;

















  };

  /**
   * Constructs a <code>ModuleResultResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModuleResultResponse} obj Optional instance to populate.
   * @return {module:model/ModuleResultResponse} The populated <code>ModuleResultResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('assemblyNumber')) {
        obj['assemblyNumber'] = ApiClient.convertToType(data['assemblyNumber'], 'String');
      }
      if (data.hasOwnProperty('assemblyRevision')) {
        obj['assemblyRevision'] = ApiClient.convertToType(data['assemblyRevision'], 'String');
      }
      if (data.hasOwnProperty('attributeInfo')) {
        obj['attributeInfo'] = ApiClient.convertToType(data['attributeInfo'], Object);
      }
      if (data.hasOwnProperty('containmentEntity')) {
        obj['containmentEntity'] = ApiClient.convertToType(data['containmentEntity'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('entityPhysicalIndex')) {
        obj['entityPhysicalIndex'] = ApiClient.convertToType(data['entityPhysicalIndex'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('isFieldReplaceable')) {
        obj['isFieldReplaceable'] = ApiClient.convertToType(data['isFieldReplaceable'], 'String');
      }
      if (data.hasOwnProperty('isReportingAlarmsAllowed')) {
        obj['isReportingAlarmsAllowed'] = ApiClient.convertToType(data['isReportingAlarmsAllowed'], 'String');
      }
      if (data.hasOwnProperty('manufacturer')) {
        obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
      }
      if (data.hasOwnProperty('moduleIndex')) {
        obj['moduleIndex'] = ApiClient.convertToType(data['moduleIndex'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('operationalStateCode')) {
        obj['operationalStateCode'] = ApiClient.convertToType(data['operationalStateCode'], 'String');
      }
      if (data.hasOwnProperty('partNumber')) {
        obj['partNumber'] = ApiClient.convertToType(data['partNumber'], 'String');
      }
      if (data.hasOwnProperty('serialNumber')) {
        obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
      }
      if (data.hasOwnProperty('vendorEquipmentType')) {
        obj['vendorEquipmentType'] = ApiClient.convertToType(data['vendorEquipmentType'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} assemblyNumber
   */
  exports.prototype['assemblyNumber'] = undefined;
  /**
   * @member {String} assemblyRevision
   */
  exports.prototype['assemblyRevision'] = undefined;
  /**
   * @member {Object} attributeInfo
   */
  exports.prototype['attributeInfo'] = undefined;
  /**
   * @member {String} containmentEntity
   */
  exports.prototype['containmentEntity'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {String} entityPhysicalIndex
   */
  exports.prototype['entityPhysicalIndex'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {module:model/ModuleResultResponse.IsFieldReplaceableEnum} isFieldReplaceable
   */
  exports.prototype['isFieldReplaceable'] = undefined;
  /**
   * @member {module:model/ModuleResultResponse.IsReportingAlarmsAllowedEnum} isReportingAlarmsAllowed
   */
  exports.prototype['isReportingAlarmsAllowed'] = undefined;
  /**
   * @member {String} manufacturer
   */
  exports.prototype['manufacturer'] = undefined;
  /**
   * @member {Number} moduleIndex
   */
  exports.prototype['moduleIndex'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} operationalStateCode
   */
  exports.prototype['operationalStateCode'] = undefined;
  /**
   * @member {String} partNumber
   */
  exports.prototype['partNumber'] = undefined;
  /**
   * @member {String} serialNumber
   */
  exports.prototype['serialNumber'] = undefined;
  /**
   * @member {String} vendorEquipmentType
   */
  exports.prototype['vendorEquipmentType'] = undefined;


  /**
   * Allowed values for the <code>isFieldReplaceable</code> property.
   * @enum {String}
   * @readonly
   */
  exports.IsFieldReplaceableEnum = {
    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",
    /**
     * value: "TRUE"
     * @const
     */
    "TRUE": "TRUE",
    /**
     * value: "FALSE"
     * @const
     */
    "FALSE": "FALSE",
    /**
     * value: "NOT_APPLICABLE"
     * @const
     */
    "NOT_APPLICABLE": "NOT_APPLICABLE"  };

  /**
   * Allowed values for the <code>isReportingAlarmsAllowed</code> property.
   * @enum {String}
   * @readonly
   */
  exports.IsReportingAlarmsAllowedEnum = {
    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",
    /**
     * value: "TRUE"
     * @const
     */
    "TRUE": "TRUE",
    /**
     * value: "FALSE"
     * @const
     */
    "FALSE": "FALSE",
    /**
     * value: "NOT_APPLICABLE"
     * @const
     */
    "NOT_APPLICABLE": "NOT_APPLICABLE"  };


  return exports;
}));


