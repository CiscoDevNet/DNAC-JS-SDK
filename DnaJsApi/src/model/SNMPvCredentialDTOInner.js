/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Swagger) {
      root.Swagger = {};
    }
    root.Swagger.SNMPvCredentialDTOInner = factory(root.Swagger.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SNMPvCredentialDTOInner model module.
   * @module model/SNMPvCredentialDTOInner
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>SNMPvCredentialDTOInner</code>.
   * @alias module:model/SNMPvCredentialDTOInner
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>SNMPvCredentialDTOInner</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SNMPvCredentialDTOInner} obj Optional instance to populate.
   * @return {module:model/SNMPvCredentialDTOInner} The populated <code>SNMPvCredentialDTOInner</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('authPassword')) {
        obj['authPassword'] = ApiClient.convertToType(data['authPassword'], 'String');
      }
      if (data.hasOwnProperty('authType')) {
        obj['authType'] = ApiClient.convertToType(data['authType'], 'String');
      }
      if (data.hasOwnProperty('comments')) {
        obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
      }
      if (data.hasOwnProperty('credentialType')) {
        obj['credentialType'] = ApiClient.convertToType(data['credentialType'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('instanceTenantId')) {
        obj['instanceTenantId'] = ApiClient.convertToType(data['instanceTenantId'], 'String');
      }
      if (data.hasOwnProperty('instanceUuid')) {
        obj['instanceUuid'] = ApiClient.convertToType(data['instanceUuid'], 'String');
      }
      if (data.hasOwnProperty('privacyPassword')) {
        obj['privacyPassword'] = ApiClient.convertToType(data['privacyPassword'], 'String');
      }
      if (data.hasOwnProperty('privacyType')) {
        obj['privacyType'] = ApiClient.convertToType(data['privacyType'], 'String');
      }
      if (data.hasOwnProperty('snmpMode')) {
        obj['snmpMode'] = ApiClient.convertToType(data['snmpMode'], 'String');
      }
      if (data.hasOwnProperty('username')) {
        obj['username'] = ApiClient.convertToType(data['username'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} authPassword
   */
  exports.prototype['authPassword'] = undefined;
  /**
   * @member {module:model/SNMPvCredentialDTOInner.AuthTypeEnum} authType
   */
  exports.prototype['authType'] = undefined;
  /**
   * @member {String} comments
   */
  exports.prototype['comments'] = undefined;
  /**
   * @member {module:model/SNMPvCredentialDTOInner.CredentialTypeEnum} credentialType
   */
  exports.prototype['credentialType'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} instanceTenantId
   */
  exports.prototype['instanceTenantId'] = undefined;
  /**
   * @member {String} instanceUuid
   */
  exports.prototype['instanceUuid'] = undefined;
  /**
   * @member {String} privacyPassword
   */
  exports.prototype['privacyPassword'] = undefined;
  /**
   * @member {module:model/SNMPvCredentialDTOInner.PrivacyTypeEnum} privacyType
   */
  exports.prototype['privacyType'] = undefined;
  /**
   * @member {module:model/SNMPvCredentialDTOInner.SnmpModeEnum} snmpMode
   */
  exports.prototype['snmpMode'] = undefined;
  /**
   * @member {String} username
   */
  exports.prototype['username'] = undefined;


  /**
   * Allowed values for the <code>authType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AuthTypeEnum = {
    /**
     * value: "SHA"
     * @const
     */
    "SHA": "SHA",
    /**
     * value: "MD5"
     * @const
     */
    "MD5": "MD5"  };

  /**
   * Allowed values for the <code>credentialType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CredentialTypeEnum = {
    /**
     * value: "GLOBAL"
     * @const
     */
    "GLOBAL": "GLOBAL",
    /**
     * value: "APP"
     * @const
     */
    "APP": "APP"  };

  /**
   * Allowed values for the <code>privacyType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PrivacyTypeEnum = {
    /**
     * value: "DES"
     * @const
     */
    "DES": "DES",
    /**
     * value: "AES128"
     * @const
     */
    "AES128": "AES128"  };

  /**
   * Allowed values for the <code>snmpMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SnmpModeEnum = {
    /**
     * value: "AUTHPRIV"
     * @const
     */
    "AUTHPRIV": "AUTHPRIV",
    /**
     * value: "AUTHNOPRIV"
     * @const
     */
    "AUTHNOPRIV": "AUTHNOPRIV",
    /**
     * value: "NOAUTHNOPRIV"
     * @const
     */
    "NOAUTHNOPRIV": "NOAUTHNOPRIV"  };


  return exports;
}));


