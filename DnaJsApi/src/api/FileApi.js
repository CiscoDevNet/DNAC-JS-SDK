/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DownloadsAFileReferredByTheFileIdResponse', 'model/FileObjectListResult', 'model/NameSpaceListResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DownloadsAFileReferredByTheFileIdResponse'), require('../model/FileObjectListResult'), require('../model/NameSpaceListResult'));
  } else {
    // Browser globals (root is window)
    if (!root.Swagger) {
      root.Swagger = {};
    }
    root.Swagger.FileApi = factory(root.Swagger.ApiClient, root.Swagger.DownloadsAFileReferredByTheFileIdResponse, root.Swagger.FileObjectListResult, root.Swagger.NameSpaceListResult);
  }
}(this, function(ApiClient, DownloadsAFileReferredByTheFileIdResponse, FileObjectListResult, NameSpaceListResult) {
  'use strict';

  /**
   * File service.
   * @module api/FileApi
   * @version 1.0.0
   */

  /**
   * Constructs a new FileApi. 
   * @alias module:api/FileApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getFileByFileId operation.
     * @callback module:api/FileApi~getFileByFileIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DownloadsAFileReferredByTheFileIdResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Downloads a file referred by the fileId
     * This method is used to download a file referred by the fileId
     * @param {String} fileId File Identification number
     * @param {module:api/FileApi~getFileByFileIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DownloadsAFileReferredByTheFileIdResponse}
     */
    this.getFileByFileId = function(fileId, callback) {
      var postBody = null;

      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling getFileByFileId");
      }


      var pathParams = {
        'fileId': fileId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DownloadsAFileReferredByTheFileIdResponse;

      return this.apiClient.callApi(
        '/api/v1/file/${fileId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getFileNamespace operation.
     * @callback module:api/FileApi~getFileNamespaceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NameSpaceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns list of available namespaces
     * This method is used to obtain a list of available namespaces
     * @param {module:api/FileApi~getFileNamespaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NameSpaceListResult}
     */
    this.getFileNamespace = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = NameSpaceListResult;

      return this.apiClient.callApi(
        '/api/v1/file/namespace', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getFileNamespaceByNameSpace operation.
     * @callback module:api/FileApi~getFileNamespaceByNameSpaceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FileObjectListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns list of files under a specific namespace
     * This method is used to obtain a list of files under a specific namespace
     * @param {String} nameSpace A listing of fileId&#39;s
     * @param {module:api/FileApi~getFileNamespaceByNameSpaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FileObjectListResult}
     */
    this.getFileNamespaceByNameSpace = function(nameSpace, callback) {
      var postBody = null;

      // verify the required parameter 'nameSpace' is set
      if (nameSpace === undefined || nameSpace === null) {
        throw new Error("Missing the required parameter 'nameSpace' when calling getFileNamespaceByNameSpace");
      }


      var pathParams = {
        'nameSpace': nameSpace
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = FileObjectListResult;

      return this.apiClient.callApi(
        '/api/v1/file/namespace/${nameSpace}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
