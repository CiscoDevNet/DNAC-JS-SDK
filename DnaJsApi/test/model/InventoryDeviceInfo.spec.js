/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.InventoryDeviceInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InventoryDeviceInfo', function() {
    it('should create an instance of InventoryDeviceInfo', function() {
      // uncomment below and update the code to test InventoryDeviceInfo
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be.a(Swagger.InventoryDeviceInfo);
    });

    it('should have the property cliTransport (base name: "cliTransport")', function() {
      // uncomment below and update the code to test the property cliTransport
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property computeDevice (base name: "computeDevice")', function() {
      // uncomment below and update the code to test the property computeDevice
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property enablePassword (base name: "enablePassword")', function() {
      // uncomment below and update the code to test the property enablePassword
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property extendedDiscoveryInfo (base name: "extendedDiscoveryInfo")', function() {
      // uncomment below and update the code to test the property extendedDiscoveryInfo
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property httpPassword (base name: "httpPassword")', function() {
      // uncomment below and update the code to test the property httpPassword
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property httpPort (base name: "httpPort")', function() {
      // uncomment below and update the code to test the property httpPort
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property httpSecure (base name: "httpSecure")', function() {
      // uncomment below and update the code to test the property httpSecure
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property httpUserName (base name: "httpUserName")', function() {
      // uncomment below and update the code to test the property httpUserName
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property merakiOrgId (base name: "merakiOrgId")', function() {
      // uncomment below and update the code to test the property merakiOrgId
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property netconfPort (base name: "netconfPort")', function() {
      // uncomment below and update the code to test the property netconfPort
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property serialNumber (base name: "serialNumber")', function() {
      // uncomment below and update the code to test the property serialNumber
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpAuthPassphrase (base name: "snmpAuthPassphrase")', function() {
      // uncomment below and update the code to test the property snmpAuthPassphrase
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpAuthProtocol (base name: "snmpAuthProtocol")', function() {
      // uncomment below and update the code to test the property snmpAuthProtocol
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpMode (base name: "snmpMode")', function() {
      // uncomment below and update the code to test the property snmpMode
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpPrivPassphrase (base name: "snmpPrivPassphrase")', function() {
      // uncomment below and update the code to test the property snmpPrivPassphrase
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpPrivProtocol (base name: "snmpPrivProtocol")', function() {
      // uncomment below and update the code to test the property snmpPrivProtocol
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpROCommunity (base name: "snmpROCommunity")', function() {
      // uncomment below and update the code to test the property snmpROCommunity
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpRWCommunity (base name: "snmpRWCommunity")', function() {
      // uncomment below and update the code to test the property snmpRWCommunity
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpRetry (base name: "snmpRetry")', function() {
      // uncomment below and update the code to test the property snmpRetry
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpTimeout (base name: "snmpTimeout")', function() {
      // uncomment below and update the code to test the property snmpTimeout
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpUserName (base name: "snmpUserName")', function() {
      // uncomment below and update the code to test the property snmpUserName
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property snmpVersion (base name: "snmpVersion")', function() {
      // uncomment below and update the code to test the property snmpVersion
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property updateMgmtIPaddressList (base name: "updateMgmtIPaddressList")', function() {
      // uncomment below and update the code to test the property updateMgmtIPaddressList
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

    it('should have the property userName (base name: "userName")', function() {
      // uncomment below and update the code to test the property userName
      //var instane = new Swagger.InventoryDeviceInfo();
      //expect(instance).to.be();
    });

  });

}));
