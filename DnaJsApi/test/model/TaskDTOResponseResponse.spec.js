/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.TaskDTOResponseResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaskDTOResponseResponse', function() {
    it('should create an instance of TaskDTOResponseResponse', function() {
      // uncomment below and update the code to test TaskDTOResponseResponse
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be.a(Swagger.TaskDTOResponseResponse);
    });

    it('should have the property additionalStatusURL (base name: "additionalStatusURL")', function() {
      // uncomment below and update the code to test the property additionalStatusURL
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property errorCode (base name: "errorCode")', function() {
      // uncomment below and update the code to test the property errorCode
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property errorKey (base name: "errorKey")', function() {
      // uncomment below and update the code to test the property errorKey
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property failureReason (base name: "failureReason")', function() {
      // uncomment below and update the code to test the property failureReason
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property instanceTenantId (base name: "instanceTenantId")', function() {
      // uncomment below and update the code to test the property instanceTenantId
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property isError (base name: "isError")', function() {
      // uncomment below and update the code to test the property isError
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdate (base name: "lastUpdate")', function() {
      // uncomment below and update the code to test the property lastUpdate
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property operationIdList (base name: "operationIdList")', function() {
      // uncomment below and update the code to test the property operationIdList
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property parentId (base name: "parentId")', function() {
      // uncomment below and update the code to test the property parentId
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property progress (base name: "progress")', function() {
      // uncomment below and update the code to test the property progress
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property rootId (base name: "rootId")', function() {
      // uncomment below and update the code to test the property rootId
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property serviceType (base name: "serviceType")', function() {
      // uncomment below and update the code to test the property serviceType
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instane = new Swagger.TaskDTOResponseResponse();
      //expect(instance).to.be();
    });

  });

}));
