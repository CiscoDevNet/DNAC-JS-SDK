/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.PathResponseResultResponseNetworkElementsInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PathResponseResultResponseNetworkElementsInfo', function() {
    it('should create an instance of PathResponseResultResponseNetworkElementsInfo', function() {
      // uncomment below and update the code to test PathResponseResultResponseNetworkElementsInfo
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be.a(Swagger.PathResponseResultResponseNetworkElementsInfo);
    });

    it('should have the property accuracyList (base name: "accuracyList")', function() {
      // uncomment below and update the code to test the property accuracyList
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property detailedStatus (base name: "detailedStatus")', function() {
      // uncomment below and update the code to test the property detailedStatus
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deviceStatistics (base name: "deviceStatistics")', function() {
      // uncomment below and update the code to test the property deviceStatistics
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deviceStatsCollection (base name: "deviceStatsCollection")', function() {
      // uncomment below and update the code to test the property deviceStatsCollection
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deviceStatsCollectionFailureReason (base name: "deviceStatsCollectionFailureReason")', function() {
      // uncomment below and update the code to test the property deviceStatsCollectionFailureReason
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property egressInterface (base name: "egressInterface")', function() {
      // uncomment below and update the code to test the property egressInterface
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property flexConnect (base name: "flexConnect")', function() {
      // uncomment below and update the code to test the property flexConnect
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property ingressInterface (base name: "ingressInterface")', function() {
      // uncomment below and update the code to test the property ingressInterface
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property linkInformationSource (base name: "linkInformationSource")', function() {
      // uncomment below and update the code to test the property linkInformationSource
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property perfMonCollection (base name: "perfMonCollection")', function() {
      // uncomment below and update the code to test the property perfMonCollection
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property perfMonCollectionFailureReason (base name: "perfMonCollectionFailureReason")', function() {
      // uncomment below and update the code to test the property perfMonCollectionFailureReason
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property perfMonitorStatistics (base name: "perfMonitorStatistics")', function() {
      // uncomment below and update the code to test the property perfMonitorStatistics
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property ssid (base name: "ssid")', function() {
      // uncomment below and update the code to test the property ssid
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property tunnels (base name: "tunnels")', function() {
      // uncomment below and update the code to test the property tunnels
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

    it('should have the property wlanId (base name: "wlanId")', function() {
      // uncomment below and update the code to test the property wlanId
      //var instane = new Swagger.PathResponseResultResponseNetworkElementsInfo();
      //expect(instance).to.be();
    });

  });

}));
