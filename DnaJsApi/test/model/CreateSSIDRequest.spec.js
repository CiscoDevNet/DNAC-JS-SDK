/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.CreateSSIDRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateSSIDRequest', function() {
    it('should create an instance of CreateSSIDRequest', function() {
      // uncomment below and update the code to test CreateSSIDRequest
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be.a(Swagger.CreateSSIDRequest);
    });

    it('should have the property interfaceName (base name: "interfaceName")', function() {
      // uncomment below and update the code to test the property interfaceName
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property vlanId (base name: "vlanId")', function() {
      // uncomment below and update the code to test the property vlanId
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property ssidName (base name: "ssidName")', function() {
      // uncomment below and update the code to test the property ssidName
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property wlanType (base name: "wlanType")', function() {
      // uncomment below and update the code to test the property wlanType
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property authenticationType (base name: "authenticationType")', function() {
      // uncomment below and update the code to test the property authenticationType
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property authenticationServer (base name: "authenticationServer")', function() {
      // uncomment below and update the code to test the property authenticationServer
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property passpharse (base name: "passpharse")', function() {
      // uncomment below and update the code to test the property passpharse
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property trafficType (base name: "trafficType")', function() {
      // uncomment below and update the code to test the property trafficType
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property radioPolicy (base name: "radioPolicy")', function() {
      // uncomment below and update the code to test the property radioPolicy
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property fastTransition (base name: "fastTransition")', function() {
      // uncomment below and update the code to test the property fastTransition
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property enableFastlane (base name: "enableFastlane")', function() {
      // uncomment below and update the code to test the property enableFastlane
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property enableMACFilering (base name: "enableMACFilering")', function() {
      // uncomment below and update the code to test the property enableMACFilering
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property enableBroadcastSSID (base name: "enableBroadcastSSID")', function() {
      // uncomment below and update the code to test the property enableBroadcastSSID
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property enableWLANBandSelection (base name: "enableWLANBandSelection")', function() {
      // uncomment below and update the code to test the property enableWLANBandSelection
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property wirelessNetworkProfileName (base name: "wirelessNetworkProfileName")', function() {
      // uncomment below and update the code to test the property wirelessNetworkProfileName
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property sitesNameHierarchyToMapTheProfile (base name: "sitesNameHierarchyToMapTheProfile")', function() {
      // uncomment below and update the code to test the property sitesNameHierarchyToMapTheProfile
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property deviceName (base name: "deviceName")', function() {
      // uncomment below and update the code to test the property deviceName
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property siteNameHierarchyToMapDevicePhysicalLocation (base name: "siteNameHierarchyToMapDevicePhysicalLocation")', function() {
      // uncomment below and update the code to test the property siteNameHierarchyToMapDevicePhysicalLocation
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property managedAPLocations (base name: "managedAPLocations")', function() {
      // uncomment below and update the code to test the property managedAPLocations
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property interfaceIPAddress (base name: "interfaceIPAddress")', function() {
      // uncomment below and update the code to test the property interfaceIPAddress
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property interfaceNetMaskInCIDRFormat (base name: "interfaceNetMaskInCIDRFormat")', function() {
      // uncomment below and update the code to test the property interfaceNetMaskInCIDRFormat
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property interfaceGatewayIPAddress (base name: "interfaceGatewayIPAddress")', function() {
      // uncomment below and update the code to test the property interfaceGatewayIPAddress
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property interfaceLAGPortNumber (base name: "interfaceLAGPortNumber")', function() {
      // uncomment below and update the code to test the property interfaceLAGPortNumber
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property siteNameHierarchyToMapAPPhysicalLocation (base name: "siteNameHierarchyToMapAPPhysicalLocation")', function() {
      // uncomment below and update the code to test the property siteNameHierarchyToMapAPPhysicalLocation
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property apNames (base name: "apNames")', function() {
      // uncomment below and update the code to test the property apNames
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

    it('should have the property rfProfile (base name: "rfProfile")', function() {
      // uncomment below and update the code to test the property rfProfile
      //var instane = new Swagger.CreateSSIDRequest();
      //expect(instance).to.be();
    });

  });

}));
