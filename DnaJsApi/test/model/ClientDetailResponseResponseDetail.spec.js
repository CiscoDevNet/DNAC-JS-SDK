/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.ClientDetailResponseResponseDetail();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClientDetailResponseResponseDetail', function() {
    it('should create an instance of ClientDetailResponseResponseDetail', function() {
      // uncomment below and update the code to test ClientDetailResponseResponseDetail
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be.a(Swagger.ClientDetailResponseResponseDetail);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property connectionStatus (base name: "connectionStatus")', function() {
      // uncomment below and update the code to test the property connectionStatus
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property hostType (base name: "hostType")', function() {
      // uncomment below and update the code to test the property hostType
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "userId")', function() {
      // uncomment below and update the code to test the property userId
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property hostName (base name: "hostName")', function() {
      // uncomment below and update the code to test the property hostName
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property hostOs (base name: "hostOs")', function() {
      // uncomment below and update the code to test the property hostOs
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property hostVersion (base name: "hostVersion")', function() {
      // uncomment below and update the code to test the property hostVersion
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property subType (base name: "subType")', function() {
      // uncomment below and update the code to test the property subType
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "lastUpdated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property healthScore (base name: "healthScore")', function() {
      // uncomment below and update the code to test the property healthScore
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property hostMac (base name: "hostMac")', function() {
      // uncomment below and update the code to test the property hostMac
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property hostIpV4 (base name: "hostIpV4")', function() {
      // uncomment below and update the code to test the property hostIpV4
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property hostIpV6 (base name: "hostIpV6")', function() {
      // uncomment below and update the code to test the property hostIpV6
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property authType (base name: "authType")', function() {
      // uncomment below and update the code to test the property authType
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property vlanId (base name: "vlanId")', function() {
      // uncomment below and update the code to test the property vlanId
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property ssid (base name: "ssid")', function() {
      // uncomment below and update the code to test the property ssid
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property frequency (base name: "frequency")', function() {
      // uncomment below and update the code to test the property frequency
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property channel (base name: "channel")', function() {
      // uncomment below and update the code to test the property channel
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property apGroup (base name: "apGroup")', function() {
      // uncomment below and update the code to test the property apGroup
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property clientConnection (base name: "clientConnection")', function() {
      // uncomment below and update the code to test the property clientConnection
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property connectedDevice (base name: "connectedDevice")', function() {
      // uncomment below and update the code to test the property connectedDevice
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property issueCount (base name: "issueCount")', function() {
      // uncomment below and update the code to test the property issueCount
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property rssi (base name: "rssi")', function() {
      // uncomment below and update the code to test the property rssi
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property avgRssi (base name: "avgRssi")', function() {
      // uncomment below and update the code to test the property avgRssi
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property snr (base name: "snr")', function() {
      // uncomment below and update the code to test the property snr
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property avgSnr (base name: "avgSnr")', function() {
      // uncomment below and update the code to test the property avgSnr
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property dataRate (base name: "dataRate")', function() {
      // uncomment below and update the code to test the property dataRate
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property txBytes (base name: "txBytes")', function() {
      // uncomment below and update the code to test the property txBytes
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property rxBytes (base name: "rxBytes")', function() {
      // uncomment below and update the code to test the property rxBytes
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property dnsSuccess (base name: "dnsSuccess")', function() {
      // uncomment below and update the code to test the property dnsSuccess
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property dnsFailure (base name: "dnsFailure")', function() {
      // uncomment below and update the code to test the property dnsFailure
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property onboarding (base name: "onboarding")', function() {
      // uncomment below and update the code to test the property onboarding
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property onboardingTime (base name: "onboardingTime")', function() {
      // uncomment below and update the code to test the property onboardingTime
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

    it('should have the property port (base name: "port")', function() {
      // uncomment below and update the code to test the property port
      //var instane = new Swagger.ClientDetailResponseResponseDetail();
      //expect(instance).to.be();
    });

  });

}));
