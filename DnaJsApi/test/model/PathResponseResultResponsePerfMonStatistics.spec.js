/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.PathResponseResultResponsePerfMonStatistics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PathResponseResultResponsePerfMonStatistics', function() {
    it('should create an instance of PathResponseResultResponsePerfMonStatistics', function() {
      // uncomment below and update the code to test PathResponseResultResponsePerfMonStatistics
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be.a(Swagger.PathResponseResultResponsePerfMonStatistics);
    });

    it('should have the property byteRate (base name: "byteRate")', function() {
      // uncomment below and update the code to test the property byteRate
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property destIpAddress (base name: "destIpAddress")', function() {
      // uncomment below and update the code to test the property destIpAddress
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property destPort (base name: "destPort")', function() {
      // uncomment below and update the code to test the property destPort
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property inputInterface (base name: "inputInterface")', function() {
      // uncomment below and update the code to test the property inputInterface
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property ipv4DSCP (base name: "ipv4DSCP")', function() {
      // uncomment below and update the code to test the property ipv4DSCP
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property ipv4TTL (base name: "ipv4TTL")', function() {
      // uncomment below and update the code to test the property ipv4TTL
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property outputInterface (base name: "outputInterface")', function() {
      // uncomment below and update the code to test the property outputInterface
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property packetBytes (base name: "packetBytes")', function() {
      // uncomment below and update the code to test the property packetBytes
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property packetCount (base name: "packetCount")', function() {
      // uncomment below and update the code to test the property packetCount
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property packetLoss (base name: "packetLoss")', function() {
      // uncomment below and update the code to test the property packetLoss
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property packetLossPercentage (base name: "packetLossPercentage")', function() {
      // uncomment below and update the code to test the property packetLossPercentage
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property refreshedAt (base name: "refreshedAt")', function() {
      // uncomment below and update the code to test the property refreshedAt
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property rtpJitterMax (base name: "rtpJitterMax")', function() {
      // uncomment below and update the code to test the property rtpJitterMax
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property rtpJitterMean (base name: "rtpJitterMean")', function() {
      // uncomment below and update the code to test the property rtpJitterMean
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property rtpJitterMin (base name: "rtpJitterMin")', function() {
      // uncomment below and update the code to test the property rtpJitterMin
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property sourceIpAddress (base name: "sourceIpAddress")', function() {
      // uncomment below and update the code to test the property sourceIpAddress
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

    it('should have the property sourcePort (base name: "sourcePort")', function() {
      // uncomment below and update the code to test the property sourcePort
      //var instane = new Swagger.PathResponseResultResponsePerfMonStatistics();
      //expect(instance).to.be();
    });

  });

}));
