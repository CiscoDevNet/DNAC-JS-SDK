/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.GlobalCredentialApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GlobalCredentialApi', function() {
    describe('deleteGlobalCredentialByGlobalCredentialId', function() {
      it('should call deleteGlobalCredentialByGlobalCredentialId successfully', function(done) {
        //uncomment below and update the code to test deleteGlobalCredentialByGlobalCredentialId
        //instance.deleteGlobalCredentialByGlobalCredentialId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGlobalCredential', function() {
      it('should call getGlobalCredential successfully', function(done) {
        //uncomment below and update the code to test getGlobalCredential
        //instance.getGlobalCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGlobalCredentialById', function() {
      it('should call getGlobalCredentialById successfully', function(done) {
        //uncomment below and update the code to test getGlobalCredentialById
        //instance.getGlobalCredentialById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGlobalCredentialCli', function() {
      it('should call postGlobalCredentialCli successfully', function(done) {
        //uncomment below and update the code to test postGlobalCredentialCli
        //instance.postGlobalCredentialCli(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGlobalCredentialHttpRead', function() {
      it('should call postGlobalCredentialHttpRead successfully', function(done) {
        //uncomment below and update the code to test postGlobalCredentialHttpRead
        //instance.postGlobalCredentialHttpRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGlobalCredentialHttpWrite', function() {
      it('should call postGlobalCredentialHttpWrite successfully', function(done) {
        //uncomment below and update the code to test postGlobalCredentialHttpWrite
        //instance.postGlobalCredentialHttpWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGlobalCredentialNetconf', function() {
      it('should call postGlobalCredentialNetconf successfully', function(done) {
        //uncomment below and update the code to test postGlobalCredentialNetconf
        //instance.postGlobalCredentialNetconf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGlobalCredentialSnmpv2ReadCommunity', function() {
      it('should call postGlobalCredentialSnmpv2ReadCommunity successfully', function(done) {
        //uncomment below and update the code to test postGlobalCredentialSnmpv2ReadCommunity
        //instance.postGlobalCredentialSnmpv2ReadCommunity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGlobalCredentialSnmpv2WriteCommunity', function() {
      it('should call postGlobalCredentialSnmpv2WriteCommunity successfully', function(done) {
        //uncomment below and update the code to test postGlobalCredentialSnmpv2WriteCommunity
        //instance.postGlobalCredentialSnmpv2WriteCommunity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGlobalCredentialSnmpv3', function() {
      it('should call postGlobalCredentialSnmpv3 successfully', function(done) {
        //uncomment below and update the code to test postGlobalCredentialSnmpv3
        //instance.postGlobalCredentialSnmpv3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialByGlobalCredentialId', function() {
      it('should call putGlobalCredentialByGlobalCredentialId successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialByGlobalCredentialId
        //instance.putGlobalCredentialByGlobalCredentialId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialCli', function() {
      it('should call putGlobalCredentialCli successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialCli
        //instance.putGlobalCredentialCli(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialHttpRead', function() {
      it('should call putGlobalCredentialHttpRead successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialHttpRead
        //instance.putGlobalCredentialHttpRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialHttpWrite', function() {
      it('should call putGlobalCredentialHttpWrite successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialHttpWrite
        //instance.putGlobalCredentialHttpWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialNetconf', function() {
      it('should call putGlobalCredentialNetconf successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialNetconf
        //instance.putGlobalCredentialNetconf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialSnmpv2ReadCommunity', function() {
      it('should call putGlobalCredentialSnmpv2ReadCommunity successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialSnmpv2ReadCommunity
        //instance.putGlobalCredentialSnmpv2ReadCommunity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialSnmpv2WriteCommunity', function() {
      it('should call putGlobalCredentialSnmpv2WriteCommunity successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialSnmpv2WriteCommunity
        //instance.putGlobalCredentialSnmpv2WriteCommunity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putGlobalCredentialSnmpv3', function() {
      it('should call putGlobalCredentialSnmpv3 successfully', function(done) {
        //uncomment below and update the code to test putGlobalCredentialSnmpv3
        //instance.putGlobalCredentialSnmpv3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
