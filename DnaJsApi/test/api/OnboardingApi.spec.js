/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.OnboardingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OnboardingApi', function() {
    describe('deleteOnboardingPnpDeviceById', function() {
      it('should call deleteOnboardingPnpDeviceById successfully', function(done) {
        //uncomment below and update the code to test deleteOnboardingPnpDeviceById
        //instance.deleteOnboardingPnpDeviceById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOnboardingPnpSettingsVacct', function() {
      it('should call deleteOnboardingPnpSettingsVacct successfully', function(done) {
        //uncomment below and update the code to test deleteOnboardingPnpSettingsVacct
        //instance.deleteOnboardingPnpSettingsVacct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOnboardingPnpWorkflowById', function() {
      it('should call deleteOnboardingPnpWorkflowById successfully', function(done) {
        //uncomment below and update the code to test deleteOnboardingPnpWorkflowById
        //instance.deleteOnboardingPnpWorkflowById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpDevice', function() {
      it('should call getOnboardingPnpDevice successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpDevice
        //instance.getOnboardingPnpDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpDeviceById', function() {
      it('should call getOnboardingPnpDeviceById successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpDeviceById
        //instance.getOnboardingPnpDeviceById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpDeviceCcount', function() {
      it('should call getOnboardingPnpDeviceCcount successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpDeviceCcount
        //instance.getOnboardingPnpDeviceCcount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpDeviceDashboardCount', function() {
      it('should call getOnboardingPnpDeviceDashboardCount successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpDeviceDashboardCount
        //instance.getOnboardingPnpDeviceDashboardCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpDeviceHistory', function() {
      it('should call getOnboardingPnpDeviceHistory successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpDeviceHistory
        //instance.getOnboardingPnpDeviceHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpDeviceSacctVacctSyncResultByDomainAndName', function() {
      it('should call getOnboardingPnpDeviceSacctVacctSyncResultByDomainAndName successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpDeviceSacctVacctSyncResultByDomainAndName
        //instance.getOnboardingPnpDeviceSacctVacctSyncResultByDomainAndName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpSettings', function() {
      it('should call getOnboardingPnpSettings successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpSettings
        //instance.getOnboardingPnpSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpSettingsSacct', function() {
      it('should call getOnboardingPnpSettingsSacct successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpSettingsSacct
        //instance.getOnboardingPnpSettingsSacct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpSettingsSacctVacctByDomain', function() {
      it('should call getOnboardingPnpSettingsSacctVacctByDomain successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpSettingsSacctVacctByDomain
        //instance.getOnboardingPnpSettingsSacctVacctByDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpWorkflow', function() {
      it('should call getOnboardingPnpWorkflow successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpWorkflow
        //instance.getOnboardingPnpWorkflow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpWorkflowById', function() {
      it('should call getOnboardingPnpWorkflowById successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpWorkflowById
        //instance.getOnboardingPnpWorkflowById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOnboardingPnpWorkflowCount', function() {
      it('should call getOnboardingPnpWorkflowCount successfully', function(done) {
        //uncomment below and update the code to test getOnboardingPnpWorkflowCount
        //instance.getOnboardingPnpWorkflowCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpDevice', function() {
      it('should call postOnboardingPnpDevice successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpDevice
        //instance.postOnboardingPnpDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpDeviceClaim', function() {
      it('should call postOnboardingPnpDeviceClaim successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpDeviceClaim
        //instance.postOnboardingPnpDeviceClaim(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpDeviceImport', function() {
      it('should call postOnboardingPnpDeviceImport successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpDeviceImport
        //instance.postOnboardingPnpDeviceImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpDeviceProvision', function() {
      it('should call postOnboardingPnpDeviceProvision successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpDeviceProvision
        //instance.postOnboardingPnpDeviceProvision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpDeviceReset', function() {
      it('should call postOnboardingPnpDeviceReset successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpDeviceReset
        //instance.postOnboardingPnpDeviceReset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpDeviceUnclaim', function() {
      it('should call postOnboardingPnpDeviceUnclaim successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpDeviceUnclaim
        //instance.postOnboardingPnpDeviceUnclaim(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpDeviceVacctSync', function() {
      it('should call postOnboardingPnpDeviceVacctSync successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpDeviceVacctSync
        //instance.postOnboardingPnpDeviceVacctSync(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpSettingsSavacct', function() {
      it('should call postOnboardingPnpSettingsSavacct successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpSettingsSavacct
        //instance.postOnboardingPnpSettingsSavacct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOnboardingPnpWorkflow', function() {
      it('should call postOnboardingPnpWorkflow successfully', function(done) {
        //uncomment below and update the code to test postOnboardingPnpWorkflow
        //instance.postOnboardingPnpWorkflow(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putOnboardingPnpDeviceById', function() {
      it('should call putOnboardingPnpDeviceById successfully', function(done) {
        //uncomment below and update the code to test putOnboardingPnpDeviceById
        //instance.putOnboardingPnpDeviceById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putOnboardingPnpSettings', function() {
      it('should call putOnboardingPnpSettings successfully', function(done) {
        //uncomment below and update the code to test putOnboardingPnpSettings
        //instance.putOnboardingPnpSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putOnboardingPnpSettingsSavacct', function() {
      it('should call putOnboardingPnpSettingsSavacct successfully', function(done) {
        //uncomment below and update the code to test putOnboardingPnpSettingsSavacct
        //instance.putOnboardingPnpSettingsSavacct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putOnboardingPnpWorkflowById', function() {
      it('should call putOnboardingPnpWorkflowById successfully', function(done) {
        //uncomment below and update the code to test putOnboardingPnpWorkflowById
        //instance.putOnboardingPnpWorkflowById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
