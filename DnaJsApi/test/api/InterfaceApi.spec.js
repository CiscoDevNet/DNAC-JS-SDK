/**
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Swagger);
  }
}(this, function(expect, Swagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Swagger.InterfaceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InterfaceApi', function() {
    describe('getInterface', function() {
      it('should call getInterface successfully', function(done) {
        //uncomment below and update the code to test getInterface
        //instance.getInterface(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceById', function() {
      it('should call getInterfaceById successfully', function(done) {
        //uncomment below and update the code to test getInterfaceById
        //instance.getInterfaceById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceCount', function() {
      it('should call getInterfaceCount successfully', function(done) {
        //uncomment below and update the code to test getInterfaceCount
        //instance.getInterfaceCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceIpAddressByIpAddress', function() {
      it('should call getInterfaceIpAddressByIpAddress successfully', function(done) {
        //uncomment below and update the code to test getInterfaceIpAddressByIpAddress
        //instance.getInterfaceIpAddressByIpAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceIsis', function() {
      it('should call getInterfaceIsis successfully', function(done) {
        //uncomment below and update the code to test getInterfaceIsis
        //instance.getInterfaceIsis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceNetworkDeviceByDeviceId', function() {
      it('should call getInterfaceNetworkDeviceByDeviceId successfully', function(done) {
        //uncomment below and update the code to test getInterfaceNetworkDeviceByDeviceId
        //instance.getInterfaceNetworkDeviceByDeviceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceNetworkDeviceCountByDeviceId', function() {
      it('should call getInterfaceNetworkDeviceCountByDeviceId successfully', function(done) {
        //uncomment below and update the code to test getInterfaceNetworkDeviceCountByDeviceId
        //instance.getInterfaceNetworkDeviceCountByDeviceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceNetworkDeviceInterfaceNameByDeviceId', function() {
      it('should call getInterfaceNetworkDeviceInterfaceNameByDeviceId successfully', function(done) {
        //uncomment below and update the code to test getInterfaceNetworkDeviceInterfaceNameByDeviceId
        //instance.getInterfaceNetworkDeviceInterfaceNameByDeviceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterfaceOspf', function() {
      it('should call getInterfaceOspf successfully', function(done) {
        //uncomment below and update the code to test getInterfaceOspf
        //instance.getInterfaceOspf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkDeviceByDeviceIdRange', function() {
      it('should call getNetworkDeviceByDeviceIdRange successfully', function(done) {
        //uncomment below and update the code to test getNetworkDeviceByDeviceIdRange
        //instance.getNetworkDeviceByDeviceIdRange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
